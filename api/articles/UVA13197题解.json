{"title":"UVA13197题解","uid":"2c236756dec82651c6e8b2a340fb3146","slug":"UVA13197题解","date":"2023-03-19T08:53:19.000Z","updated":"2023-06-24T07:21:54.891Z","comments":true,"path":"api/articles/UVA13197题解.json","keywords":"Limit-Blog","cover":"https://pic.imgdb.cn/item/648eb30c1ddac507cc801013.jpg","content":"<ul>\n<li><p><a href=\"https://www.luogu.com.cn/problem/UVA13197\">题目链接</a></p>\n</li>\n<li><p>题目大意<br>有两个非负整数 a 和 p, 需要我们求出所有的非负整数 x 使得满足 x ^ 3 mod p = a 且 x &lt; p.</p>\n</li>\n<li><p>思路<br>看完题目， 很容易想到， 直接枚举！<br>因为 x &lt; p, 所以 x 最大只能是 p - 1, 再因为 x 是非负数， 所以 x 最小是 0, 那么我们就可以用一个循环把 x 从 0 到 p - 1 全部枚举一遍， 接着再判断 x ^ 3 mod p 是否等于 a 就行了！</p>\n</li>\n<li><p>注意        </p>\n<ol>\n<li>本题多测       </li>\n<li>每一组数据的结尾不能有空格   </li>\n<li>升序输出  </li>\n</ol>\n<p>既然不能有空格， 那要怎么办呢？<br>   其实不难， 我们只需要用一个 <code>flag</code> 记录该答案是否是第一个答案：  </p>\n<ul>\n<li>如果是， 则直接输出 x 就可以；     </li>\n<li>如果不是， 则在输出前还要在输出一个空格；</li>\n</ul>\n</li>\n<li><p>代码实现</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> flag<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">inline</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 判断 x^3 mod p 是否等于 a </span>\n\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">*</span> x <span class=\"token operator\">*</span> x <span class=\"token operator\">%</span> p <span class=\"token operator\">==</span> a <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cin <span class=\"token operator\">>></span> a <span class=\"token operator\">>></span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 多测 </span>\n\t\tx <span class=\"token operator\">=</span> flag <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\">// 预处理 </span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> p<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span> x<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    \n\t\t\t<span class=\"token comment\">// 枚举 x, 从 0 到 p - 1 </span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    <span class=\"token comment\">// 满足条件， 是答案 </span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>flag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>     <span class=\"token comment\">// 该答案是第一个答案 </span>\n\t\t\t\t\t<span class=\"token operator\">++</span> flag<span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 修改 flag </span>\n\t\t\t\t\tcout <span class=\"token operator\">&lt;&lt;</span> x<span class=\"token punctuation\">;</span>\t   <span class=\"token comment\">// 直接输出 x </span>\n\t\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">' '</span> <span class=\"token operator\">&lt;&lt;</span> x<span class=\"token punctuation\">;</span> \n\t\t\t\t<span class=\"token comment\">// 不是第一个答案， 还要在 x 前面在输出一个空格 </span>\n\t\t\t<span class=\"token punctuation\">&#125;</span>\n\t\t<span class=\"token punctuation\">&#125;</span>\n\t\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token char\">'\\n'</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// 记得每一组数据要换行 </span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t         <span class=\"token comment\">// 完美散花 </span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"此题解仅供参考-谢谢\"><a href=\"#此题解仅供参考-谢谢\" class=\"headerlink\" title=\"此题解仅供参考, 谢谢!\"></a>此题解仅供参考, 谢谢!</h2></li>\n</ul>\n","feature":true,"text":" 题目链接 题目大意有两个非负整数 a 和 p, 需要我们求出所有的非负整数 x 使得满足 x ^ 3 mod p = a 且 x &lt; p. 思路看完题目， 很容易想到， 直接枚举！因为 x &lt; p, 所以 x 最大只能是 p - 1, 再因为 x 是非负数， 所以 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"UVA","slug":"UVA","count":2,"path":"api/tags/UVA.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A4%E9%A2%98%E8%A7%A3%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83-%E8%B0%A2%E8%B0%A2\"><span class=\"toc-text\">此题解仅供参考, 谢谢!</span></a></li></ol>","author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"prev_post":{"title":"SP30669题解","uid":"2e7944ca2e6ed341449d1a3cb4b30f5a","slug":"SP30669题解","date":"2023-03-19T08:55:21.000Z","updated":"2023-06-24T07:24:19.878Z","comments":true,"path":"api/articles/SP30669题解.json","keywords":"Limit-Blog","cover":"https://pic.imgdb.cn/item/648eb0b11ddac507cc7cc781.jpg","text":" 题目链接 题目大意有个人， 叫 Ada， 她在旅游， 在她那里， 共有 N 个城市， M 条路线。 一般情况下， 别人会去主城市和大城市游玩， 但是她不一般， Ada 想去离自己最远的地方玩， 因为她觉得这样拍的照片更有价值。 Ada 给你发了 Q 条求救， 那么聪明的你， 请...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"SPOJ","slug":"SPOJ","count":1,"path":"api/tags/SPOJ.json"}],"author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"feature":true},"next_post":{"title":"UVA10189题解","uid":"fd1651d40ba3852722ca5b0826aced41","slug":"UVA10189题解","date":"2023-03-19T08:47:25.000Z","updated":"2023-06-24T07:21:15.097Z","comments":true,"path":"api/articles/UVA10189题解.json","keywords":"Limit-Blog","cover":"https://cdn.luogu.com.cn/upload/image_hosting/neg7iin9.png","text":" 题目链接 题目大意给你一个字符矩阵， 也就是地雷分布图， 让你求出每个不是地雷的点的周围有多少颗地雷。 有多组数据。 思路 根据题目描述， 我们可以知道， 这题就是一个普通的模拟题， 只需要先遍历这个地雷分布图， 如果是 *， 就直接输出 *， 否则就遍历它周围的八个方向是否有...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"UVA","slug":"UVA","count":2,"path":"api/tags/UVA.json"}],"author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"feature":true}}