{"title":"CF472B题解","uid":"11d1cc0f8fe89d28a1b1aece459d33f1","slug":"CF472B题解","date":"2023-03-19T08:42:27.000Z","updated":"2023-06-24T07:21:52.299Z","comments":true,"path":"api/articles/CF472B题解.json","keywords":"Scorpio's Blog","cover":"https://pic.imgdb.cn/item/648eb0e51ddac507cc7d0550.jpg","content":"<ul>\n<li><p><a href=\"https://www.luogu.com.cn/problem/CF472B\">题目链接</a></p>\n</li>\n<li><p>题目大意<br>有 n 个人， 每个人都有自己想要到达的楼层， 第 i 想要去第 fi 层。 同时有一个电梯， 电梯的最大承受人数为 k。 求电梯的最小运行层数。</p>\n</li>\n<li><p>思路<br>要求电梯的最小运行层数， 我们就要先知道单次电梯的运行层数怎么求。</p>\n<p>假设电梯里有 m 个人, 其中第 i 个人的希望到达层数为 fi, 那么该次电梯的运行数为所有人的希望到达层数的最大值， 即 max{f1, f2…f{m - 1}, fm}</p>\n<p>其次， 因为单次电梯的运行层数为电梯里所有人的希望到达层数的最大值。 所以， 我们可以尽可能地把希望到达层数较大的人放在一起， 同时乘坐电梯， 同时尽可能地将电梯装满。</p>\n<p>接着， 由于电梯从 1 楼上去后还要回到 1 楼。 所以， 在计算电梯单次运行层数时要乘 2. 同时， 电梯从第 1 楼到 t 层共走了 t - 1 层。 所以， 单次电梯的运行层数为 2 * (fi - 1).</p>\n<p>最后， 因为要尽可能地将希望到达层数较大的人放在一起， 所以我们可以先把所有人的希望到达层数从大到小排序一下就可以了。</p>\n</li>\n<li><p>代码实现</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;bits/stdc++.h></span></span>\n  <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">int</span> <span class=\"token expression\"><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span></span></span>\n  <span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">N</span> <span class=\"token expression\"><span class=\"token number\">1000000</span></span></span>\n  <span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">inline</span> <span class=\"token keyword\">int</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// 快读 </span>\n      <span class=\"token keyword\">int</span> f <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isdigit</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">==</span> <span class=\"token char\">'-'</span><span class=\"token punctuation\">)</span> n <span class=\"token operator\">*=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n          ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isdigit</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> ch <span class=\"token operator\">-</span> <span class=\"token char\">'0'</span><span class=\"token punctuation\">;</span>\n          ch <span class=\"token operator\">=</span> <span class=\"token function\">getchar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> f <span class=\"token operator\">*</span> n<span class=\"token punctuation\">;</span>\t\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">int</span> <span class=\"token function\">cmp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">// sort排序用的  </span>\n      <span class=\"token keyword\">return</span> x <span class=\"token operator\">></span> y<span class=\"token punctuation\">;</span>\t <span class=\"token comment\">// 从大到小排序 </span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> tot<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">[</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/*\n   n   : 人数\n   k   : 电梯的最大承受人数\n   tot : 最终结果， 即电梯的最小运行层数\n   f[] : 用来储存所有人希望到达的楼层 \n  */</span>\n  <span class=\"token keyword\">signed</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  <span class=\"token comment\">// 主函数 </span>\n      n <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span> i<span class=\"token punctuation\">)</span> f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 输入， 具体见上注释 </span>\n      <span class=\"token function\">sort</span> <span class=\"token punctuation\">(</span>f <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> f <span class=\"token operator\">+</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 排序， 使所有人希望到达的楼层数按从大到小的顺序 </span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> n<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> k<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token comment\">// 每次装满电梯， 所以 i += k </span>\n          tot <span class=\"token operator\">+=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n          <span class=\"token comment\">/*\n              因为电梯上去后还要回到第 1 层, 所以要乘 2 \n              从第 1 层到第 i 层共走了 (i - 1) 层\n              单次电梯运行数为电梯里最大的希望到达数 \n          */</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\n\"</span><span class=\"token punctuation\">,</span> tot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 输出最终结果 </span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t  <span class=\"token comment\">// 完美结束 </span>\n  <span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"此题解仅供参考-谢谢\"><a href=\"#此题解仅供参考-谢谢\" class=\"headerlink\" title=\"此题解仅供参考, 谢谢!\"></a>此题解仅供参考, 谢谢!</h2></li>\n</ul>\n","text":" 题目链接 题目大意有 n 个人， 每个人都有自己想要到达的楼层， 第 i 想要去第 fi 层。 同时有一个电梯， 电梯的最大承受人数为 k。 求电梯的最小运行层数。 思路要求电梯的最小运行层数， 我们就要先知道单次电梯的运行层数怎么求。 假设电梯里有 m 个人, 其中第 i 个...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"Codeforces","slug":"Codeforces","count":3,"path":"api/tags/Codeforces.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A4%E9%A2%98%E8%A7%A3%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83-%E8%B0%A2%E8%B0%A2\"><span class=\"toc-text\">此题解仅供参考, 谢谢!</span></a></li></ol>","author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1179082277"}}}},"mapped":true,"prev_post":{"title":"UVA10189题解","uid":"fd1651d40ba3852722ca5b0826aced41","slug":"UVA10189题解","date":"2023-03-19T08:47:25.000Z","updated":"2023-06-24T07:21:15.097Z","comments":true,"path":"api/articles/UVA10189题解.json","keywords":"Scorpio's Blog","cover":"https://cdn.luogu.com.cn/upload/image_hosting/neg7iin9.png","text":" 题目链接 题目大意给你一个字符矩阵， 也就是地雷分布图， 让你求出每个不是地雷的点的周围有多少颗地雷。 有多组数据。 思路 根据题目描述， 我们可以知道， 这题就是一个普通的模拟题， 只需要先遍历这个地雷分布图， 如果是 *， 就直接输出 *， 否则就遍历它周围的八个方向是否有...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"UVA","slug":"UVA","count":2,"path":"api/tags/UVA.json"}],"author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1179082277"}}}},"feature":true},"next_post":{"title":"CF1784A题解","uid":"84cd9d22260caf953fbe318a70e7da7c","slug":"CF1784A题解","date":"2023-03-19T08:32:12.000Z","updated":"2023-06-24T07:21:41.318Z","comments":true,"path":"api/articles/CF1784A题解.json","keywords":"Scorpio's Blog","cover":"https://cdn.luogu.com.cn/upload/image_hosting/kmwfq1xk.png","text":" 题目链接 题目大意有一个序列 a1, a2 … a{n-1}, a{n} 且所有元素皆为正整数，共有两种操作，使得进行若干次操作后的序列的所有元素皆不大于零，求第一种操作的最小操作次数。 操作如下： 选择序列中的任意一个正整数元素，将其减一； 将序列中所有的正整数元素都将其减一...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Problem-Explanation","slug":"Problem-Explanation","count":6,"path":"api/categories/Problem-Explanation.json"}],"tags":[{"name":"Codeforces","slug":"Codeforces","count":3,"path":"api/tags/Codeforces.json"}],"author":{"name":"Scorpio","slug":"blog-author","avatar":"https://pic.imgdb.cn/item/63fb3165f144a010072484b1.png","link":"/","description":"一位正在享受生活的小伙","socials":{"github":"https://github.com/Scorpio-Limit","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/lonely-scorpio-11","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/1179082277"}}}}}}